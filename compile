import py_compile
import glob
import os.path
import subprocess

def gitPull(cmd):
        pull = subprocess.Popen(cmd_pull , stdout=subprocess.PIPE, shell=True)
        return pull.stdout
'''
def compile():
        files = glob.glob('*.py')
        for x in files:
                if not os.path.isdir(x):
                        py_compile.compile(x)
                        print 'compile %s to %s .pyc' %(x,x)
'''

def compile():
    pwd = './'
    for path,dirs,files in os.walk(pwd):
        dirs[:] = [dir for dir in dirs if dir != "ServerSetup"]
        for file in files:
            if os.path.splitext(file)[1] == ".py":
                filename = path + "/" + file
                cmpFile = py_compile.compile(filename)
                print "compile:", file, "to ", cmpFile
            print file

def svnAdd(cmd):
        add = subprocess.Popen(cmd_add , stdout=subprocess.PIPE, shell=True)
        return add.stdout

def svnCommit(cmd):
        commit = subprocess.Popen(cmd_commit , stdout=subprocess.PIPE, shell=True)
        return commit.stdout


cmd_pull = "git pull"
pull_stdout = gitPull(cmd_pull)
for pull_line in pull_stdout.readlines():
        print pull_line

compile()

cmd_add = "svn add *.pyc"
add_stdout = svnAdd(cmd_add)
for add_line in add_stdout.readlines():
        print add_line

cmd_commit = "svn commit -m ''"
commit_stdout = svnCommit(cmd_commit)
for commit_line in commit_stdout.readlines():
        print commit_line
